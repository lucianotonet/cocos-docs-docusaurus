"use strict";(self.webpackChunkcocos_docs_docusaurus=self.webpackChunkcocos_docs_docusaurus||[]).push([[7249],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var o=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,s=function(e,t){if(null==e)return{};var n,o,s={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=s,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?o.createElement(h,r(r({ref:t},c),{},{components:n})):o.createElement(h,r({ref:t},c))}));function h(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,r=new Array(a);r[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:s,r[1]=i;for(var p=2;p<a;p++)r[p]=n[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},28138:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var o=n(87462),s=(n(67294),n(3905));const a={},r="Communicate with the Panel",i={unversionedId:"editor/extension/to-panel-messages",id:"editor/extension/to-panel-messages",title:"Communicate with the Panel",description:"NOTE: After v3.5, we updated the extension documentation, so this documentation is deprecated, please move to Message System or Customized Messages for more information. If you see this document online, please post an issue on github and let the official staff know how to handle it.",source:"@site/docs/editor/extension/to-panel-messages.md",sourceDirName:"editor/extension",slug:"/editor/extension/to-panel-messages",permalink:"/pt/docs/editor/extension/to-panel-messages",draft:!1,editUrl:"https://github.com/cocos/cocos-docs/docs/editor/extension/to-panel-messages.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Submitting Resources to Cocos Store",permalink:"/pt/docs/editor/extension/store/upload-store"},next:{title:"UI Components",permalink:"/pt/docs/editor/extension/ui"}},l={},p=[{value:"Define methods on extensions and panels",id:"define-methods-on-extensions-and-panels",level:2},{value:"Send a message",id:"send-a-message",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,s.kt)(d,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"communicate-with-the-panel"},"Communicate with the Panel"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("strong",{parentName:"p"},"NOTE"),": After v3.5, we updated the extension documentation, so this documentation is deprecated, please move to ",(0,s.kt)("a",{parentName:"p",href:"/pt/docs/editor/extension/messages"},"Message System")," or ",(0,s.kt)("a",{parentName:"p",href:"/pt/docs/editor/extension/contributions-messages"},"Customized Messages")," for more information. If you see this document online, please post an issue on ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/cocos/cocos-docs/issues/new"},"github")," and let the official staff know how to handle it.")),(0,s.kt)("p",null,"In general, the interaction model is dominated by ",(0,s.kt)("strong",{parentName:"p"},"extension process")," and ",(0,s.kt)("strong",{parentName:"p"},"panel")," for data presentation. Similarly to the traditional Web, the ",(0,s.kt)("strong",{parentName:"p"},"plug-in")," function is the server side, and the ",(0,s.kt)("strong",{parentName:"p"},"panel")," function is the browser on the client's computer."),(0,s.kt)("p",null,"In this case, there is usually no direct data sent to the panel, the majority is some state synchronization, just using ",(0,s.kt)("strong",{parentName:"p"},"broadcast")," to broadcast."),(0,s.kt)("p",null,"But for simple extensions, or extensions to the browser environment, the actual functionality may be on the panel, and a request needs to be sent to the panel."),(0,s.kt)("p",null,"Some level of understanding of the ",(0,s.kt)("a",{parentName:"p",href:"/pt/docs/editor/extension/messages"},"Message System")," is required before reading this section."),(0,s.kt)("h2",{id:"define-methods-on-extensions-and-panels"},"Define methods on extensions and panels"),(0,s.kt)("p",null,"First we define the file: ",(0,s.kt)("inlineCode",{parentName:"p"},"package.json")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "hello-world",\n    "panels": {\n        "default": {\n            "title": "hw",\n            "main": "./panel.js"\n        }\n    },\n    "contributions": {\n        "messages": {\n            "console": {\n                "methods": ["default.console"]\n            }\n        }\n    }\n}\n')),(0,s.kt)("p",null,"The method name defined by methods in ",(0,s.kt)("inlineCode",{parentName:"p"},"messages.console")," is ",(0,s.kt)("inlineCode",{parentName:"p"},"default.console"),". Represents a console method issued to the ",(0,s.kt)("inlineCode",{parentName:"p"},"default")," panel.\n(to send to the plug-in process, fill in ",(0,s.kt)("inlineCode",{parentName:"p"},"methdName")," directly)"),(0,s.kt)("p",null,"Then define the ",(0,s.kt)("inlineCode",{parentName:"p"},"panel.js")," file of the panel:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"exports.template = '';\nexports.style = '';\n\nexports.methods = {\n    console(str) {\n        console.log(str);\n    },\n};\n\nexports.ready = async function() {};\n\nexports.close = function() {};\n")),(0,s.kt)("p",null,"Typescript"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"export const template = '';\nexport const style = '';\n\nexport const methods = {\n    console(str: string) {\n        console.log(`console: ${str}`);\n    },\n};\n\nexport async function ready() {};\n\nexport function close() {};\n")),(0,s.kt)("h2",{id:"send-a-message"},"Send a message"),(0,s.kt)("p",null,"Once we have defined the extension and the panels within the extension, we can try to trigger these messages."),(0,s.kt)("p",null,"Press ",(0,s.kt)("strong",{parentName:"p"},"CTRL (CMD) + Shift + I")," to open the console. Open the panel in the console:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"// default can be omitted, if the panel name is non-default, then you need to fill in 'hello-world.xxx'\nEditor.Panel.open('hello-world');\n// Send a console message to the hello-world plugin\nEditor.Message.send('hello-world', 'console', 'log');\n")),(0,s.kt)("p",null,"When the ",(0,s.kt)("strong",{parentName:"p"},"Hello World")," plug-in receives a message, it passes it to the ",(0,s.kt)("inlineCode",{parentName:"p"},"methods.console")," in ",(0,s.kt)("inlineCode",{parentName:"p"},"panel.js")," for processing."),(0,s.kt)("p",null,"The result is printing a string to the ",(0,s.kt)("strong",{parentName:"p"},"log")," on the console."),(0,s.kt)("p",null,"At this point, we have completed one interaction with the panel."))}u.isMDXComponent=!0}}]);