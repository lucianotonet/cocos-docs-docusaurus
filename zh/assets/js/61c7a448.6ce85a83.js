"use strict";(self.webpackChunkcocos_docs_docusaurus=self.webpackChunkcocos_docs_docusaurus||[]).push([[2730],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(n),u=a,g=c["".concat(p,".").concat(u)]||c[u]||f[u]||o;return n?i.createElement(g,r(r({ref:t},d),{},{components:n})):i.createElement(g,r({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,r[1]=l;for(var s=2;s<o;s++)r[s]=n[s];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},14352:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var i=n(87462),a=(n(67294),n(3905));const o={},r="Configuration System",l={unversionedId:"editor/extension/profile",id:"editor/extension/profile",title:"Configuration System",description:"The Cocos Creator extension provides a configuration management mechanism for saving user settings and data in the extension.",source:"@site/docs/editor/extension/profile.md",sourceDirName:"editor/extension",slug:"/editor/extension/profile",permalink:"/zh/docs/editor/extension/profile",draft:!1,editUrl:"https://github.com/cocos/cocos-docs/docs/editor/extension/profile.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Extension Panel",permalink:"/zh/docs/editor/extension/panel"},next:{title:"Calling the Engine API and Project Script",permalink:"/zh/docs/editor/extension/scene-script"}},p={},s=[{value:"Configuration Types",id:"configuration-types",level:2},{value:"Editor Configuration",id:"editor-configuration",level:3},{value:"Project Configuration",id:"project-configuration",level:3},{value:"Registering Configuration",id:"registering-configuration",level:2},{value:"Read and Modify Configuration",id:"read-and-modify-configuration",level:2},{value:"Importing Extension Definitions",id:"importing-extension-definitions",level:3},{value:"Modify the Editor Configuration",id:"modify-the-editor-configuration",level:3},{value:"Read Project Configuration",id:"read-project-configuration",level:3},{value:"Modify the Project Configuration",id:"modify-the-project-configuration",level:3},{value:"Storage Paths",id:"storage-paths",level:2},{value:"Editor Configuration Storage Path",id:"editor-configuration-storage-path",level:3},{value:"Project Configuration Storage Path",id:"project-configuration-storage-path",level:3}],d={toc:s},c="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"configuration-system"},"Configuration System"),(0,a.kt)("p",null,"The Cocos Creator extension provides a configuration management mechanism for saving user settings and data in the extension."),(0,a.kt)("h2",{id:"configuration-types"},"Configuration Types"),(0,a.kt)("p",null,"There are two types of configuration types."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"editor configuration (editor)"),(0,a.kt)("li",{parentName:"ol"},"project configuration (project)")),(0,a.kt)("h3",{id:"editor-configuration"},"Editor Configuration"),(0,a.kt)("p",null,"The editor configuration is used to store some editor-related user settings and data, and is divided into three priority levels, from high to low, as follows."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"local -> global -> default\n")),(0,a.kt)("p",null,"If there is no corresponding configuration in ",(0,a.kt)("inlineCode",{parentName:"p"},"local"),", the configuration in ",(0,a.kt)("inlineCode",{parentName:"p"},"global")," will be used, and if no corresponding configuration in ",(0,a.kt)("inlineCode",{parentName:"p"},"global")," is found, the default ",(0,a.kt)("inlineCode",{parentName:"p"},"default")," configuration will be used."),(0,a.kt)("h3",{id:"project-configuration"},"Project Configuration"),(0,a.kt)("p",null,"The project configuration is used to store some project-related user settings and data, and is divided into two priority levels, from highest to lowest."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"local -> default\n")),(0,a.kt)("p",null,"Similar to the rules of ",(0,a.kt)("strong",{parentName:"p"},"Editor Configuration"),", when fetching configuration data, the configuration item in ",(0,a.kt)("inlineCode",{parentName:"p"},"local")," will be used first, and if there is no corresponding configuration item in ",(0,a.kt)("inlineCode",{parentName:"p"},"local"),", the default ",(0,a.kt)("inlineCode",{parentName:"p"},"default")," configuration will be used."),(0,a.kt)("h2",{id:"registering-configuration"},"Registering Configuration"),(0,a.kt)("p",null,"To use the configuration system, you need to define the ",(0,a.kt)("inlineCode",{parentName:"p"},"profile")," information in the ",(0,a.kt)("inlineCode",{parentName:"p"},"contributions")," field of the extension definition file ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json"),", as follows."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "hello-world",\n    "contributions": {\n        "profile": {\n            "editor": {\n                "test.a": {\n                    "default": 0,\n                    "message": "editorTestAChanged",\n                    "label": "Test Editor configuration"\n                }\n            },\n            "project": {\n                "test.a": {\n                    "default": 1,\n                    "message": "projectTestAChanged",\n                    "label": "Test Project Configuration"\n                }\n            }\n        }\n    },\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"contributions.profile")," The related fields are interpreted as follows."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"editor"),":{} - editor configuration"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"project"),":{} - project configuration"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"test.a"),":{} - key for the configuration of test.a"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"default"),":any - the default value of this configuration item, optional parameter"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"message"),":string - the message that will be triggered when this configuration item is modified, optional"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"label"),":string - where the configuration can be displayed, this description may be displayed. Supports i18n:key format, optional parameters")),(0,a.kt)("p",null,"The TypeScript interface associated with ",(0,a.kt)("inlineCode",{parentName:"p"},"profile")," is defined as follows."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"interface ProfileInfo {\n    editor: { [ key: string ]: ProfileItem };\n    project: { [ key: string ]: ProfileItem };\n}\n\ninterface ProfileItem {\n    // Default data for configuration\n    default: any;\n    // This message is automatically sent for notification of configuration changes\n    message: string;\n    // A simple description of the role of configuration information, supporting the i18n:key syntax\n    label: string;\n}\n")),(0,a.kt)("h2",{id:"read-and-modify-configuration"},"Read and Modify Configuration"),(0,a.kt)("h3",{id:"importing-extension-definitions"},"Importing Extension Definitions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import packageJSON from '../package.json';\n")),(0,a.kt)("p",null,"If the last parameter of ",(0,a.kt)("inlineCode",{parentName:"p"},"Editor.Profile.getConfig")," is empty, a ",(0,a.kt)("a",{parentName:"p",href:"#Editor%20Configuration"},"priority")," match will be performed."),(0,a.kt)("p",null,"If the fetch location (one of ",(0,a.kt)("inlineCode",{parentName:"p"},"local"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"global"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"default"),") is specified, the corresponding value will be returned. As shown below, ",(0,a.kt)("inlineCode",{parentName:"p"},"local")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"global")," are ",(0,a.kt)("inlineCode",{parentName:"p"},"undefined")," because they are not set."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"await Editor.Profile.getConfig(packageJSON.name, 'test.a'); // 0\nawait Editor.Profile.getConfig(packageJSON.name, 'test.a', 'local'); // undefined\nawait Editor.Profile.getConfig(packageJSON.name, 'test.a', 'global'); // undefined\n")),(0,a.kt)("h3",{id:"modify-the-editor-configuration"},"Modify the Editor Configuration"),(0,a.kt)("p",null,"Call ",(0,a.kt)("inlineCode",{parentName:"p"},"getConfig")," after modifying the configuration with the following code to see the corresponding changes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"await Editor.Profile.setConfig(packageJSON.name, 'test.a', 1);\nawait Editor.Profile.setConfig(packageJSON.name, 'test.a', 'local', 2);\nawait Editor.Profile.setConfig(packageJSON.name, 'test.a', 'global', 3);\n")),(0,a.kt)("h3",{id:"read-project-configuration"},"Read Project Configuration"),(0,a.kt)("p",null,"If the last parameter of ",(0,a.kt)("inlineCode",{parentName:"p"},"Editor.Profile.getProject")," is empty, a ",(0,a.kt)("a",{parentName:"p",href:"#Project%20Configuration"},"priority")," match will be performed."),(0,a.kt)("p",null,"If the fetch location (either ",(0,a.kt)("inlineCode",{parentName:"p"},"local"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"default"),") is specified, the corresponding value will be returned. As shown below, the ",(0,a.kt)("inlineCode",{parentName:"p"},"local")," is ",(0,a.kt)("inlineCode",{parentName:"p"},"undefined")," because it is not set."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"await Editor.Profile.getProject(packageJSON.name, 'test.a'); // 1\nawait Editor.Profile.getProject(packageJSON.name, 'test.a', 'local'); // undefined\n")),(0,a.kt)("h3",{id:"modify-the-project-configuration"},"Modify the Project Configuration"),(0,a.kt)("p",null,"Call ",(0,a.kt)("inlineCode",{parentName:"p"},"getProject")," after modifying the configuration with the following code to see the corresponding changes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"await Editor.Profile.setProject(packageJSON.name, 'test.a', 1);\nawait Editor.Profile.setProject(packageJSON.name, 'test.a', 'local', 2);\n")),(0,a.kt)("h2",{id:"storage-paths"},"Storage Paths"),(0,a.kt)("h3",{id:"editor-configuration-storage-path"},"Editor Configuration Storage Path"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Hierarchy"),(0,a.kt)("th",{parentName:"tr",align:null},"Path"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"local"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"{projectPath}/profiles/v2/extensions/{extensionName}.json"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"global(mac)"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"Users/{name}/.CocosCreator/profiles/v2/extensions/{extensionName}.json"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"global(window)"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"c/Users/{name}/.CocosCreator/profiles/v2/extensions/{extensionName}.json"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"default"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"{extensionPath}/package.json"))))),(0,a.kt)("h3",{id:"project-configuration-storage-path"},"Project Configuration Storage Path"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Hierarchy"),(0,a.kt)("th",{parentName:"tr",align:null},"Path"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"local"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"{projectPath}/settings/v2/extensions/{extensionName}.json"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"default"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"{extensionPath}/package.json"))))))}f.isMDXComponent=!0}}]);